# ============ setup the environment ============

# setup binaries
/musl/busybox mkdir -p /bin
/musl/busybox --install -s /bin
ln -v -s /musl/busybox /bin/busybox

# setup libraries
mkdir -p /lib
ln -v -s /glibc/lib/libc.so.6 /lib/
ln -v -s /glibc/lib/libm.so.6 /lib/
ln -v -s /musl/lib/* /lib/
#ln -v -s /lib/libc.so.6 /lib/libc.so
#ln -v -s /lib/libm.so.6 /lib/libm.so
ln -v -s /musl/lib/libc.so /lib/ld-musl-loongarch-lp64d.so.1
ln -v -s /glibc/lib/ld-linux-loongarch-lp64d.so.1 /lib/ld-linux-loongarch-lp64d.so.1
ln -v -s /musl/lib/libc.so /lib/ld-musl-riscv64.so.1
ln -v -s /musl/lib/libc.so /lib/ld-musl-riscv64-sf.so.1
ln -v -s /glibc/lib/ld-linux-riscv64-lp64d.so.1 /lib/ld-linux-riscv64-lp64d.so.1
rm -rf /lib64
ln -v -s /lib /lib64
mkdir -p /usr
rm -rf /usr/lib64
ln -v -s /lib /usr/lib64
mkdir -p /ext
rm -rf /var/tmp
mkdir -p /var/
ln -v -s /tmp /var/tmp

# [[test]]
echo "test ltp begin"
mkdir -p /lib
ln -v -s /musl/lib/libc.so /lib/ld-musl-riscv64.so.1
cd /musl/ltp/testcases/bin

ltp_testlist="getpid01 getpid02"
echo "#### OS COMP TEST GROUP START ltp-musl ####"

# 定义目标目录
target_dir="ltp/"

# 遍历目录下的所有文件
for file in $ltp_testlist; do
  # 跳过目录，仅处理文件
  if [ -f "$file" ]; then
    # 输出文件名
    echo "RUN LTP CASE $file"

    "./$file"
    ret=$?

    # 输出文件名和返回值
    echo "FAIL LTP CASE $file : $ret"
  fi
done


echo "#### OS COMP TEST GROUP END ltp-musl ####"
#./ltp/getpid01
sh -i
exit
# [[test end]]

# ============ test cases compiled with musl ============
cd /musl || exit 1
./basic_testcode.sh
./lua_testcode.sh
./libctest_testcode.sh
./busybox_testcode.sh
./libcbench_testcode.sh
#./iozone_testcode.sh
cp iozone iozone_testcode.sh busybox /tmp
cd /tmp && ./iozone_testcode.sh

# ============ test cases compiled with glibc ============
cd /glibc || exit 1
./basic_testcode.sh
./lua_testcode.sh
./busybox_testcode.sh
./libcbench_testcode.sh
#./iozone_testcode.sh
cp iozone iozone_testcode.sh busybox /tmp
cd /tmp && ./iozone_testcode.sh