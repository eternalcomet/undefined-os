var searchIndex = new Map(JSON.parse('[["starry",{"t":"CHCCHCCTTTTTTTTTTTTTTTTTTTFPPPPPPFGFPTTTTTFGNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNONNNNNNNNNNONNNNNNNNNNOOOOOOONNNNNNNNNNNNNNNNNNNNNNNNNNNOOJFJJHNNNNNNHNHHNNNNNNNNNNNNTRKFFMNNNNNNHHNNNNNNNNNNNNNMNNNNNNNNNJCHCCCQCCCCCCCPPPFFTPGPPPPPNNNNNNONNNNNNNOOOOONNNNNNNNNNNONHHHHHHHNNNNNNNNNNNNNHHHHHHHHHHFFFOONNNNNNNNNNNNNNNNNNNNNNOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOHHHNNNNNNNOONNNCCHTTTTTTFFTTTTTNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNHHHNNNNNNNNNNHHFNNNONNNOOOHHONNNOCCHHGPPPPPPNNNNNNHHHHHHHHHNNNNNCHHHFFJJONNNNONONNHNNNNNOONNNONOOHNNNNHOHNHNHNNNNNNNOHH","n":["ctypes","main","mm","ptr","run_user_app","syscall_imp","task","CLONE_CHILD_CLEARTID","CLONE_CHILD_SETTID","CLONE_DETACHED","CLONE_FILES","CLONE_FS","CLONE_NEWNS","CLONE_NEWPID","CLONE_NEWTIME","CLONE_PARENT","CLONE_PARENT_SETTID","CLONE_PIDFD","CLONE_PTRACE","CLONE_SETTLS","CLONE_SIGHAND","CLONE_SYSVSEM","CLONE_THREAD","CLONE_UNTRACED","CLONE_VFORK","CLONE_VM","CloneFlags","Exited","NONE","NotExist","PROF","REAL","Running","TimeStat","TimerType","Tms","VIRTUAL","WALL","WCLONE","WCONTINUED","WIMTRACED","WNOHANG","WaitFlags","WaitStatus","all","","bitand","","bitand_assign","","bitor","","bitor_assign","","bits","","","","bitxor","","bitxor_assign","","borrow","","","","","","borrow_mut","","","","","","clone","","","clone_into","","","clone_to_uninit","","","complement","","contains","","default","difference","","empty","","eq","","extend","","fmt","","","","","","","","","","","from","","","","","","","from_bits","","from_bits_retain","","","","from_bits_truncate","","from_iter","","from_name","","insert","","intersection","","intersects","","into","","","","","","into_iter","","is_all","","is_empty","","iter","","iter_names","","kernel_timestamp","new","not","","output","remove","","reset","set","","set_timer","stime_ns","sub","","sub_assign","","switch_from_old_task","switch_into_kernel_mode","switch_into_user_mode","switch_to_new_task","symmetric_difference","","timer_interval_ns","timer_remained_ns","timer_type","tms_cstime","tms_cutime","tms_stime","tms_utime","to_owned","","","toggle","","try_from","","","","","","","try_into","","","","","","type_id","","","","","","union","","update_timer","user_timestamp","utime_ns","ACCESSING_USER_MEM","ACCESSING_USER_MEM_WRAPPER","_LINKME_ELEMENT_handle_page_fault","__PERCPU_ACCESSING_USER_MEM","access_user_memory","borrow","borrow_mut","current_ptr","current_ref_mut_raw","current_ref_raw","from","handle_page_fault","into","load_user_app","map_elf","offset","read_current","read_current_raw","remote_ptr","remote_ref_mut_raw","remote_ref_raw","try_from","try_into","type_id","with_current","write_current","write_current_raw","ACCESS_FLAGS","Ptr","PtrWrapper","UserConstPtr","UserPtr","address","","","borrow","","borrow_mut","","check_null_terminated","check_region","from","","","","get","get_as","get_as_array","get_as_bytes","get_as_null_terminated","","get_as_str","into","","into_inner","","","nullable","try_from","","try_into","","type_id","","_LINKME_ELEMENT_handle_syscall","fs","handle_syscall","mm","signal","sys","syscall_instrument","task","utils","ctl","fd_ops","io","pipe","stat","Blk","Chr","Dir","DirBuffer","DirEnt","FIXED_SIZE","Fifo","FileType","Lnk","Reg","Socket","Unknown","Wht","borrow","","","borrow_mut","","","buf","can_fit_entry","clone","","clone_into","","clone_to_uninit","","d_ino","d_name","d_off","d_reclen","d_type","fmt","","from","","","","into","","","new","","offset","remaining_space","sys_chdir","sys_getcwd","sys_getdents64","sys_ioctl","sys_linkat","sys_mkdirat","sys_unlinkat","to_owned","","try_from","","","try_into","","","type_id","","","write_entry","write_name","sys_close","sys_dup","sys_dup3","sys_fcntl","sys_open","sys_openat","sys_read","sys_write","sys_writev","sys_pipe2","FsStatxTimestamp","Kstat","StatX","_pad0","_pad1","borrow","","","borrow_mut","","","clone","clone_into","clone_to_uninit","default","","","fmt","","","from","","","","into","","","st_atime_nsec","st_atime_sec","st_blksize","st_blocks","st_ctime_nsec","st_ctime_sec","st_dev","st_gid","st_ino","st_mode","st_mtime_nsec","st_mtime_sec","st_nlink","st_rdev","st_size","st_uid","stx_atime","stx_attributes","stx_attributes_mask","stx_blksize","stx_blocks","stx_btime","stx_ctime","stx_dev_major","stx_dev_minor","stx_dio_mem_align","stx_dio_offset_align","stx_gid","stx_ino","stx_mask","stx_mnt_id","stx_mode","stx_mtime","stx_nlink","stx_rdev_major","stx_rdev_minor","stx_size","stx_uid","sys_fstat","sys_fstatat","sys_statx","to_owned","try_from","","","try_into","","","tv_nsec","tv_sec","type_id","","","brk","mmap","sys_brk","MAP_ANONYMOUS","MAP_FIXED","MAP_NORESERVE","MAP_PRIVATE","MAP_SHARED","MAP_STACK","MmapFlags","MmapProt","PROT_EXEC","PROT_GROWDOWN","PROT_GROWSUP","PROT_READ","PROT_WRITE","all","","bitand","","bitand_assign","","bitor","","bitor_assign","","bits","","","","bitxor","","bitxor_assign","","borrow","","borrow_mut","","complement","","contains","","difference","","empty","","extend","","fmt","","","","","","","","","","from","","from_bits","","from_bits_retain","","","","from_bits_truncate","","from_iter","","from_name","","insert","","intersection","","intersects","","into","","into_iter","","is_all","","is_empty","","iter","","iter_names","","not","","remove","","set","","sub","","sub_assign","","symmetric_difference","","sys_mmap","sys_mprotect","sys_munmap","toggle","","try_from","","try_into","","type_id","","union","","sys_rt_sigaction","sys_rt_sigprocmask","UtsName","borrow","borrow_mut","default","domainname","from","from_str","into","machine","nodename","release","sys_getuid","sys_uname","sysname","try_from","try_into","type_id","version","schedule","thread","sys_nanosleep","sys_sched_yield","ArchPrctlCode","GetCpuid","GetFs","GetGs","SetCpuid","SetFs","SetGs","borrow","borrow_mut","eq","fmt","from","into","sys_arch_prctl","sys_clone","sys_execve","sys_exit","sys_exit_group","sys_getpid","sys_getppid","sys_set_tid_address","sys_wait4","try_from","","try_from_primitive","try_into","type_id","time","sys_clock_gettime","sys_get_time_of_day","sys_times","AxNamespaceImpl","TaskExt","__AX_TASK_EXT_ALIGN","__AX_TASK_EXT_SIZE","aspace","borrow","","borrow_mut","","children","clear_child_tid","","clone_task","current_namespace_base","exec","from","","get_heap_bottom","get_heap_top","get_parent","heap_bottom","heap_top","into","","new","ns","ns_init_new","parent_id","proc_id","read_trapframe_from_kstack","set_clear_child_tid","set_heap_bottom","set_heap_top","set_parent","spawn_user_task","time","time_stat_from_kernel_to_user","","time_stat_from_user_to_kernel","","time_stat_output","","try_from","","try_into","","type_id","","uctx","wait_pid","write_trapframe_to_kstack"],"q":[[0,"starry"],[7,"starry::ctypes"],[206,"starry::mm"],[233,"starry::ptr"],[270,"starry::syscall_imp"],[279,"starry::syscall_imp::fs"],[284,"starry::syscall_imp::fs::ctl"],[349,"starry::syscall_imp::fs::fd_ops"],[353,"starry::syscall_imp::fs::io"],[358,"starry::syscall_imp::fs::pipe"],[359,"starry::syscall_imp::fs::stat"],[439,"starry::syscall_imp::mm"],[441,"starry::syscall_imp::mm::brk"],[442,"starry::syscall_imp::mm::mmap"],[554,"starry::syscall_imp::signal"],[556,"starry::syscall_imp::sys"],[574,"starry::syscall_imp::task"],[576,"starry::syscall_imp::task::schedule"],[578,"starry::syscall_imp::task::thread"],[605,"starry::syscall_imp::utils"],[606,"starry::syscall_imp::utils::time"],[609,"starry::task"],[660,"alloc::string"],[661,"core::option"],[662,"core::iter::traits::collect"],[663,"core::fmt"],[664,"bitflags::iter"],[665,"core::result"],[666,"core::any"],[667,"core::ops::function"],[668,"memory_addr::addr"],[669,"page_table_entry"],[670,"axmm::aspace"],[671,"axerrno"],[672,"xmas_elf"],[673,"kernel_elf_parser::auxv"],[674,"core::alloc::layout"],[675,"core::cmp"],[676,"core::default"],[677,"core::ffi"],[678,"axhal::arch::x86_64::context"],[679,"axfs::api::file"],[680,"arceos_posix_api::ctypes"],[681,"num_enum"],[682,"alloc::sync"],[683,"axsync::mutex"],[684,"core::sync::atomic"],[685,"axns"],[686,"axtask::api"],[687,"core::cell"]],"i":"```````n000000000000000000`AfAh1001```0A`0000``303030303033003030CbAn5243105243543543543525205252435255555222243105243352552252525252525210524352525252520052052052005252000052000111154352105243310524310524352000`````Ch00000`0``000000000000E`0```0EbEd1010``11002222100102102101010``````````````Fh00``Ff1`11111Fd1201200121212111111201220120100```````1201201201201`````````````Gj00GlGn210222210210221021022222222222222220000000000000000000000```221021011210```Hd00000``Hb000001010101010011010101010101010101000001111101010011010101010101010101010101010101010101```0101010101```Hf000000000``00000`````Hj00000000000`````````00000````````Ib0Jb1011110`10111111011111`1111`1`1`1`11010101``","f":"`{{}b}``{{{h{{f{d}}}}{h{{f{d}}}}}{{l{j}}}}```````````````````````````````````````{{}n}{{}A`}{{nn}n}{{A`A`}A`}{{{h{Abn}}n}b}{{{h{AbA`}}A`}b}3210{{{h{n}}}Ad}0{{{h{A`}}}Ad}05432{h{{h{c}}}{}}00000{{{h{Ab}}}{{h{Abc}}}{}}00000{{{h{n}}}n}{{{h{Af}}}Af}{{{h{Ah}}}Ah}{{h{h{Abc}}}b{}}00{{hAj}b}00{nn}{A`A`}{{{h{n}}n}Al}{{{h{A`}}A`}Al}{{}An}{{nn}n}{{A`A`}A`}{{}n}{{}A`}{{{h{Af}}{h{Af}}}Al}{{{h{Ah}}{h{Ah}}}Al}{{{h{Abn}}c}b{{Bb{}{{B`{n}}}}}}{{{h{AbA`}}c}b{{Bb{}{{B`{A`}}}}}}{{{h{n}}{h{AbBd}}}Bf}0000{{{h{A`}}{h{AbBd}}}Bf}000{{{h{Af}}{h{AbBd}}}Bf}{{{h{Ah}}{h{AbBd}}}Bf}{cc{}}00000{BhAh}{Ad{{l{n}}}}{Ad{{l{A`}}}}{Adn}0{AdA`}010{cn{{Bb{}{{B`{n}}}}}}{cA`{{Bb{}{{B`{A`}}}}}}{{{h{Bj}}}{{l{n}}}}{{{h{Bj}}}{{l{A`}}}}{{{h{Abn}}n}b}{{{h{AbA`}}A`}b}{{nn}n}{{A`A`}A`}{{{h{n}}n}Al}{{{h{A`}}A`}Al}{{}c{}}00000{nc{}}{A`c{}}{{{h{n}}}Al}{{{h{A`}}}Al}10{{{h{n}}}{{Bl{n}}}}{{{h{A`}}}{{Bl{A`}}}}{{{h{n}}}{{Bn{n}}}}{{{h{A`}}}{{Bn{A`}}}}{AnBh}{{}An}{nn}{A`A`}{{{h{An}}}{{C`{BhBh}}}}{{{h{Abn}}n}b}{{{h{AbA`}}A`}b}{{{h{AbAn}}Bh}b}{{{h{Abn}}nAl}b}{{{h{AbA`}}A`Al}b}{{{h{AbAn}}BhBhBh}Al}:{{nn}n}{{A`A`}A`}76555510<<{AnAh}{CbBh}000{hc{}}00:9{c{{Cd{e}}}{}{}}0000{j{{Cd{Ahj}}}}1{{}{{Cd{c}}}{}}00000{hCf}0000087<{AnBh}0{{}Ch}`{{}Cj}{{}Al}{ec{}{{Cn{}{{Cl{c}}}}}}{h{{h{c}}}{}}{{{h{Ab}}}{{h{Abc}}}{}}{{{h{Ch}}}Al}{{{h{Ch}}}{{h{AbAl}}}}{{{h{Ch}}}{{h{Al}}}}{cc{}}{{D`DbAl}Al}{{}c{}}{{{h{AbDd}}{h{{f{d}}}}{h{{f{d}}}}}{{Df{{C`{D`D`}}}}}}{{{h{AbDd}}{h{Dh}}}{{Df{{C`{D`{Dl{Dj}}}}}}}}{{{h{Ch}}}Bh}88{{{h{Ch}}Bh}Al}{{{h{Ch}}Bh}{{h{AbAl}}}}{{{h{Ch}}Bh}{{h{Al}}}}{c{{Cd{e}}}{}{}}{{}{{Cd{c}}}{}}{hCf}{{{h{Ch}}e}c{}{{Cn{{h{AbAl}}}{{Cl{c}}}}}}{{{h{Ch}}Al}b}0`````{{{h{{E`{}{{Dn{c}}}}}}}D`{}}{{{h{{Eb{c}}}}}D`{}}{{{h{{Ed{c}}}}}D`{}}{h{{h{c}}}{}}0{{{h{Ab}}}{{h{Abc}}}{}}0{{D`Db}{{Ef{{C`{Bh}}}}}}{{D`EhDb}{{Ef{b}}}}{Bh{{Eb{c}}}{}}{cc{}}{Bh{{Ed{c}}}{}}1{{{E`{}{{Dn{c}}}}}{{Ef{c}}}{}}{{{E`{}{{Dn{c}}}}Eh}{{Ef{c}}}{}}{{{E`{}{{Dn{c}}}}Bh}{{Ef{c}}}{}}0{{{Eb{c}}}{{Ef{{h{Ab{f{c}}}}}}}{EjEl}}{{{Ed{c}}}{{Ef{{h{{f{c}}}}}}}{EjEl}}{{{Ed{En}}}{{Ef{{h{Bj}}}}}}{{}c{}}0{{{E`{}{{Dn{c}}}}}c{}}{{{Eb{c}}}e{}{}}{{{Ed{c}}}e{}{}}{{{E`{}{{Dn{c}}}}g}{{Ef{{l{e}}}}}{}{}{{Cn{{E`{}{{Dn{c}}}}}{{Cl{{Ef{e}}}}}}}}{c{{Cd{e}}}{}{}}0{{}{{Cd{c}}}{}}0{hCf}0{{}Cj}`{{{h{F`}}Bh}Fb}````````````````````````{h{{h{c}}}{}}00{{{h{Ab}}}{{h{Abc}}}{}}00{Fdh}{{{h{Fd}}Bh}Al}{{{h{Ff}}}Ff}{{{h{Fh}}}Fh}{{h{h{Abc}}}b{}}0{{hAj}b}0{FfFj}{FfDl}{FfFl}{FfFn}{FfAj}{{{h{Ff}}{h{AbBd}}}Bf}{{{h{Fh}}{h{AbBd}}}Bf}{cc{}}0{G`Fh}1{{}c{}}00{{{h{Ab{f{Aj}}}}}Fd}{{FjFlBhFh}Ff}{FdBh}{{{h{Fd}}}Bh}{{{Ed{En}}}{{Ef{Fb}}}}{{{Eb{En}}Bh}{{Ef{Fb}}}}{{j{Eb{Gb}}Bh}{{Ef{Fb}}}}{{jBh{Eb{Gb}}}{{Ef{Fb}}}}{{j{Ed{En}}j{Ed{En}}j}{{Ef{Fb}}}}{{j{Ed{En}}Ad}{{Ef{Fb}}}}{{Fb{Ed{En}}Bh}{{Ef{Fb}}}}{hc{}}0{c{{Cd{e}}}{}{}}00{{}{{Cd{c}}}{}}00{hCf}00{{{h{AbFd}}Ff{h{{f{Aj}}}}}{{Cd{bb}}}}{{{h{AbFf}}{h{{f{Aj}}}}}b}{Gd{{Ef{Fb}}}}0{{GdGd}{{Ef{Fb}}}}{{GdGdBh}{{Ef{Fb}}}}{{{Ed{En}}jGf}{{Ef{Fb}}}}{{j{Ed{En}}jGf}{{Ef{Fb}}}}?{{j{Ed{Gb}}Bh}{{Ef{Fb}}}}{{j{Ed{Gh}}j}{{Ef{Fb}}}}{{{Eb{j}}}{{Ef{Fb}}}}```{GjFj}{GjAd}{h{{h{c}}}{}}00{{{h{Ab}}}{{h{Abc}}}{}}00{{{h{Gj}}}Gj}{{h{h{Abc}}}b{}}{{hAj}b}{{}Gj}{{}Gl}{{}Gn}{{{h{Gj}}{h{AbBd}}}Bf}{{{h{Gl}}{h{AbBd}}}Bf}{{{h{Gn}}{h{AbBd}}}Bf}{H`Gj}{cc{}}00{{}c{}}00{GjFb}0?{GjFj}110{GjAd}10220110{GnGl}{GnFj}0{GnAd}12200000101{GnFn}311121{{j{Eb{Gj}}}{{Ef{Fb}}}}{{Fb{Ed{En}}{Eb{Gj}}j}{{Ef{Fb}}}}{{j{Ed{En}}AdAd{Eb{Gn}}}{{Ef{Fb}}}}{hc{}}{c{{Cd{e}}}{}{}}00{{}{{Cd{c}}}{}}00{GlAd}{GlFl}{hCf}00``{Bh{{Ef{Fb}}}}`````````````{{}Hb}{{}Hd}{{HbHb}Hb}{{HdHd}Hd}{{{h{AbHb}}Hb}b}{{{h{AbHd}}Hd}b}3210{{{h{Hb}}}j}0{{{h{Hd}}}j}05432{h{{h{c}}}{}}0{{{h{Ab}}}{{h{Abc}}}{}}0{HbHb}{HdHd}{{{h{Hb}}Hb}Al}{{{h{Hd}}Hd}Al};:=<{{{h{AbHb}}c}b{{Bb{}{{B`{Hb}}}}}}{{{h{AbHd}}c}b{{Bb{}{{B`{Hd}}}}}}{{{h{Hb}}{h{AbBd}}}Bf}0000{{{h{Hd}}{h{AbBd}}}Bf}0000{cc{}}0{j{{l{Hb}}}}{j{{l{Hd}}}}{jHb}0{jHd}010{cHb{{Bb{}{{B`{Hb}}}}}}{cHd{{Bb{}{{B`{Hd}}}}}}{{{h{Bj}}}{{l{Hb}}}}{{{h{Bj}}}{{l{Hd}}}}{{{h{AbHb}}Hb}b}{{{h{AbHd}}Hd}b}{{HbHb}Hb}{{HdHd}Hd}{{{h{Hb}}Hb}Al}{{{h{Hd}}Hd}Al}{{}c{}}0{Hbc{}}{Hdc{}}{{{h{Hb}}}Al}{{{h{Hd}}}Al}10{{{h{Hb}}}{{Bl{Hb}}}}{{{h{Hd}}}{{Bl{Hd}}}}{{{h{Hb}}}{{Bn{Hb}}}}{{{h{Hd}}}{{Bn{Hd}}}}{HbHb}{HdHd}{{{h{AbHb}}Hb}b}{{{h{AbHd}}Hd}b}{{{h{AbHb}}HbAl}b}{{{h{AbHd}}HdAl}b}{{HbHb}Hb}{{HdHd}Hd}5410{{{Eb{Bh}}BhjjjFb}{{Ef{Fb}}}}{{{Eb{Bh}}Bhj}{{Ef{Fb}}}}{{{Eb{Bh}}Bh}{{Ef{Fb}}}}87{c{{Cd{e}}}{}{}}0{{}{{Cd{c}}}{}}0{hCf}076{{j{Ed{Gb}}{Eb{Gb}}Bh}{{Ef{Fb}}}}0`{h{{h{c}}}{}}{{{h{Ab}}}{{h{Abc}}}{}}{{}Hf}{HfDl}{cc{}}{{{h{Bj}}}{{Dl{Aj}}}}{{}c{}}333{{}{{Ef{Fb}}}}{{{Eb{Hf}}}{{Ef{Fb}}}}5<;:5``{{{Ed{Hh}}{Eb{Hh}}}{{Ef{Fb}}}}2```````98{{{h{Hj}}{h{Hj}}}Al}{{{h{Hj}}{h{AbBd}}}Bf}75{{j{Eb{Fj}}}{{Ef{Fb}}}}{{BhBhBhBhBh}{{Ef{Fb}}}}{{{Ed{En}}{Ed{Bh}}{Ed{Bh}}}{{Ef{Fb}}}}{jHl}088{{{Ed{j}}}{{Ef{Fb}}}}{{j{Eb{j}}Ad}{{Ef{Fb}}}}{c{{Cd{e}}}{}{}}{j{{Cd{Hj{Hn{Hj}}}}}}{c{{Cd{Hj{Hn{Hj}}}}}{}}{{}{{Cd{c}}}{}}{hCf}`{{j{Eb{Hh}}}{{Ef{Fb}}}}{{{Eb{I`}}}{{Ef{Fb}}}}{{{Eb{Cb}}}{{Ef{Fb}}}}``{{}Bh}0{IbId}{h{{h{c}}}{}}0{{{h{Ab}}}{{h{Abc}}}{}}0{IbIf}{{{h{Ib}}}Fj}{IbIh}{{{h{Ib}}Bh{l{Bh}}BhBhBh}{{Df{Fj}}}}{{}Aj}{{{h{Bj}}{h{{f{d}}}}{h{{f{d}}}}}{{Df{b}}}}{cc{}}055544{{}c{}}0{{BhIj{Id{{If{Dd}}}}Fj}Ib}{IbIl}{{{h{Ib}}}b}8{IbBh}{BhF`}{{{h{Ib}}Fj}b}000{{{Id{{If{Dd}}}}IjFj}In}{IbJ`}{{}b}{{{h{Ib}}Bh}b}10{{}{{C`{BhBhBhBh}}}}{{{h{Ib}}}{{C`{BhBh}}}}{c{{Cd{e}}}{}{}}0{{}{{Cd{c}}}{}}0{hCf}0{IbIj}{{jj}{{Cd{FjAf}}}}{{Bh{h{F`}}}b}","D":"BHf","p":[[1,"unit"],[5,"String",660],[1,"slice"],[1,"reference",null,null,1],[1,"i32"],[6,"Option",661,null,1],[5,"CloneFlags",7],[5,"WaitFlags",7],[0,"mut"],[1,"u32"],[6,"WaitStatus",7],[6,"TimerType",7],[1,"u8"],[1,"bool"],[5,"TimeStat",7],[17,"Item"],[10,"IntoIterator",662],[5,"Formatter",663],[8,"Result",663],[1,"usize"],[1,"str"],[5,"Iter",664],[5,"IterNames",664],[1,"tuple",null,null,1],[5,"Tms",7],[6,"Result",665,null,1],[5,"TypeId",666],[5,"ACCESSING_USER_MEM_WRAPPER",206],[1,"fn"],[17,"Output"],[10,"FnOnce",667],[5,"VirtAddr",668],[5,"MappingFlags",669],[5,"AddrSpace",670],[8,"AxResult",671],[5,"ElfFile",672],[5,"AuxvEntry",673],[1,"array"],[17,"Ptr"],[10,"PtrWrapper",233],[5,"UserPtr",233],[5,"UserConstPtr",233],[8,"LinuxResult",671],[5,"Layout",674],[10,"Eq",675],[10,"Default",676],[8,"c_char",677],[5,"TrapFrame",678],[1,"isize"],[5,"DirBuffer",284],[5,"DirEnt",284],[6,"FileType",284],[1,"u64"],[1,"i64"],[1,"u16"],[8,"FileType",679],[6,"c_void",677],[8,"c_int",677],[8,"mode_t",680],[5,"iovec",680],[5,"Kstat",359],[5,"FsStatxTimestamp",359],[5,"StatX",359],[5,"stat",680],[5,"MmapProt",442],[5,"MmapFlags",442],[5,"UtsName",556],[5,"timespec",680],[6,"ArchPrctlCode",578],[1,"never"],[5,"TryFromPrimitiveError",681],[5,"timeval",680],[5,"TaskExt",609],[5,"Arc",682,null,1],[5,"Mutex",683],[5,"AtomicU64",684],[5,"UspaceContext",678],[5,"AxNamespace",685],[8,"AxTaskRef",686],[5,"UnsafeCell",687],[5,"AxNamespaceImpl",609]],"r":[],"b":[[54,"impl-CloneFlags"],[55,"impl-Flags-for-CloneFlags"],[56,"impl-Flags-for-WaitFlags"],[57,"impl-WaitFlags"],[96,"impl-UpperHex-for-CloneFlags"],[97,"impl-LowerHex-for-CloneFlags"],[98,"impl-Debug-for-CloneFlags"],[99,"impl-Octal-for-CloneFlags"],[100,"impl-Binary-for-CloneFlags"],[101,"impl-LowerHex-for-WaitFlags"],[102,"impl-UpperHex-for-WaitFlags"],[103,"impl-Binary-for-WaitFlags"],[104,"impl-Octal-for-WaitFlags"],[116,"impl-Flags-for-CloneFlags"],[117,"impl-CloneFlags"],[118,"impl-WaitFlags"],[119,"impl-Flags-for-WaitFlags"],[465,"impl-Flags-for-MmapProt"],[466,"impl-MmapProt"],[467,"impl-Flags-for-MmapFlags"],[468,"impl-MmapFlags"],[487,"impl-UpperHex-for-MmapProt"],[488,"impl-LowerHex-for-MmapProt"],[489,"impl-Octal-for-MmapProt"],[490,"impl-Binary-for-MmapProt"],[491,"impl-Debug-for-MmapProt"],[492,"impl-UpperHex-for-MmapFlags"],[493,"impl-Debug-for-MmapFlags"],[494,"impl-Binary-for-MmapFlags"],[495,"impl-Octal-for-MmapFlags"],[496,"impl-LowerHex-for-MmapFlags"],[501,"impl-MmapProt"],[502,"impl-Flags-for-MmapProt"],[503,"impl-MmapFlags"],[504,"impl-Flags-for-MmapFlags"]],"c":"OjAAAAAAAAA=","e":"OzAAAAEAAFEBPgACAAUAIgACACsAAAA4AAEAPwAUAFgAAABdAAEAYQAKAHIAAAB1AAAAeAAAAIsAAQCVAAEAmQAAAJwAAACfAAEApQADAKsAAgCyAAIAtwASAMwAAwDRAAEA1AABANoAAADkAAIA6gABAPAACAD6AAAABgE4AEEBAABGAQYATwEAAFEBGABtAQ8AqQERANIBAADUAQAA2gEDAOgBCQD3AQAA+QEAAAgCAQAeAgIAIwIFACsCBQAzAgAAOAIBADsCAgA/AgMASgIDAFACBgBYAgoAZAIBAGcCAwBsAgAAbgICAHMCAgB6AgAAfAIAAH8CBQCGAgsAkwIBAA==","P":[[62,"T"],[74,""],[77,"T"],[80,""],[94,"T"],[96,""],[107,"T"],[113,""],[122,"T"],[124,""],[132,"U"],[138,"IntoIterator::IntoIter"],[140,""],[177,"T"],[180,""],[182,"U,T"],[187,""],[188,"U,T"],[189,"U"],[195,""],[210,"R,"],[211,"T"],[213,""],[216,"T"],[217,""],[218,"U"],[219,""],[227,"U,T"],[228,"U"],[229,""],[230,"T,F"],[231,""],[238,"PtrWrapper::Ptr"],[239,"T"],[245,""],[247,"T"],[251,"PtrWrapper::Ptr"],[255,"T"],[257,""],[258,"U"],[260,"PtrWrapper::Ptr"],[261,"T,PtrWrapper::Ptr"],[263,"PtrWrapper::Ptr,R,"],[264,"U,T"],[266,"U"],[268,""],[297,"T"],[303,""],[307,"T"],[309,""],[318,"T"],[320,""],[321,"T"],[322,"U"],[325,""],[336,"T"],[338,"U,T"],[341,"U"],[344,""],[364,"T"],[370,""],[371,"T"],[372,""],[380,"T"],[383,"U"],[386,""],[427,"T"],[428,"U,T"],[431,"U"],[434,""],[473,"T"],[477,""],[485,"T"],[487,""],[497,"T"],[499,""],[507,"T"],[509,""],[517,"U"],[519,"IntoIterator::IntoIter"],[521,""],[546,"U,T"],[548,"U"],[550,""],[557,"T"],[559,""],[561,"T"],[562,""],[563,"U"],[564,""],[570,"U,T"],[571,"U"],[572,""],[585,"T"],[587,""],[589,"T"],[590,"U"],[591,""],[600,"U,T"],[601,""],[602,"TryFromPrimitive::Primitive"],[603,"U"],[604,""],[614,"T"],[618,""],[624,"T"],[626,""],[631,"U"],[633,""],[651,"U,T"],[653,"U"],[655,""]]}]]'));
if (typeof exports !== 'undefined') exports.searchIndex = searchIndex;
else if (window.initSearch) window.initSearch(searchIndex);
//{"start":39,"fragment_lengths":[18285]}